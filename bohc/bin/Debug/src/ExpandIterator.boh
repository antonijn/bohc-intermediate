package boh.lang;

public class ExpandIterator<T, U> implements IIterator<U>
{
	private IIterator<T> iter;
	private ICollection<U>(T) selector;
	private ICollection<U> currCol;
	private U curr;
	
	public this(IIterator<T> iter, ICollection<U>(T) selector)
	{
		this.iter = iter;
		this.selector = selector;
	}
	
	public U current()
	{
		return curr;
	}
	
	private void updateCurrCol()
	{
		if (currCol == null)
		{
			iter.next();
			currCol = selector(iter.current());
		}
	}
	
	public boolean next()
	{
		do
		{
			updateCurrCol();
			
			while (currCol.next())
			{
				curr = currCol.current();
				return true;
			}
			
			currCol = null;
		}
		while (iter.next());
		
		return false;
	}
	
	public boolean previous()
	{
		if (!currCol.previous())
		{
			if (!iter.previous())
			{
				return false;
			}
			
			currCol = iter.current();
			currCol.moveLast();
		}
		
		return true;
	}
	
	public void moveLast()
	{
		iter.moveLast();
		currCol = iter.current();
		currCol.moveLast();
	}
	
	public void reset()
	{
		iter.reset();
		currCol = iter.current();
		currCol.reset();
	}
}

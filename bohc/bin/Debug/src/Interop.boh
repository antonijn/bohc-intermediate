package boh.std.interop;

public class Interop
{
	private static pf_desktop64 native long GC_malloc(int size);
	private static pf_desktop32 native int GC_malloc(int size);
	private static pf_desktop64 native long GC_realloc(VoidPtr ptr, int size);
	private static pf_desktop32 native int GC_realloc(VoidPtr ptr, int size);

	private static pf_desktop64 native long malloc(int size);
	private static pf_desktop32 native int malloc(int size);
	private static pf_desktop64 native long realloc(VoidPtr ptr, int size);
	private static pf_desktop32 native int realloc(VoidPtr ptr, int size);
	private static pf_desktop64 native void free(VoidPtr size);
	private static pf_desktop32 native void free(VoidPtr size);

	public static VoidPtr gcAlloc(int size)
	{
		return new VoidPtr(GC_malloc(size));
	}
	public static VoidPtr gcRealloc(VoidPtr ptr, int size)
	{
		return new VoidPtr(GC_realloc(ptr, size));
	}

	public static VoidPtr alloc(int size)
	{
		return new VoidPtr(malloc(size));
	}
	public static VoidPtr realloc(VoidPtr ptr, int size)
	{
		return new VoidPtr(realloc(ptr, size));
	}
	public static void free(VoidPtr ptr)
	{
		free(ptr);
	}
}


package boh.std.interop;

public struct Ptr<T>
{
	private pf_desktop64 long ptr;
	private pf_desktop32 int ptr;

	public static final Ptr<T> NULL = default(Ptr<T>);

	public this(VoidPtr ptr)
	{
		this.ptr = ptr.toInt();
	}

	public this(ref T reference)
	{
		ptr = native_ref(reference);
	}

	public pf_desktop64 this(long ptr)
	{
		this.ptr = ptr;
	}

	public pf_desktop32 this(int ptr)
	{
		this.ptr = ptr;
	}

	public T deref()
	{
		return native_deref(T, ptr);
	}

	public T deref(int idx)
	{
		return native_deref(T, ptr + idx * native_sizeof(T));
	}

	public void set(int idx, T value)
	{
		native_deref(T, ptr + idx * native_sizeof(T)) = value;
	}

	public pf_desktop64 long toInt()
	{
		return ptr;
	}

	public pf_desktop32 int toInt()
	{
		return ptr;
	}
}

